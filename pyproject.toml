[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "rejected"
dynamic = ["version"]
description = "Analytics Ingestion Service"
authors = [
    {name = "Gavin M. Roy", email="gavinmroy@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: BSD License",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed"
]
dependencies = [
    "pika",
    "pyyaml"
]
license = { text = "BSD 3-Clause" }
readme = "README.rst"
requires-python = ">=3.12"

[project.optional-dependencies]
amqp = [
    "aiorabbit>=1.0,<2",
    "fastavro>=1.7.3,<1.8.2",
]
docs = ["sphinx>=7.2.6,<7.3"]
postgres = [ "psycopg[binary,pool]>=3.1.9"]
sentry = ["sentry-sdk>=1.5.4,<2"]
testing = [
    "build",
    "coverage>=7.4.0,<8",
    "pre-commit>=3.5.0,<4",
    "psycopg[binary,pool]>=3.1.16,<4",
    "sentry-sdk>=1.39.1,<2"
]

[project.scripts]
rejected = "rejected.__main__:run"

[tool.coverage.run]
branch = true
command_line = "-m unittest discover tests --verbose"
data_file = "build/.coverage"

[tool.coverage.report]
show_missing = true
include = ["analytics_ingestion/*"]
omit = ["tests/*.py"]

[tool.coverage.html]
directory = "build/reports/coverage"

[tool.coverage.xml]
output = "build/reports/coverage.xml"

[tool.flake8]
application-import-names = ["rejected", "tests"]
count = true
exclude = ["build", "env", "dist"]
import-order-style = "pycharm"

[tool.hatch.envs.default]
python = "python3.12"
features = []

[tool.hatch.build]
artifacts = ["VERSION"]

[tool.hatch.build.targets.sdist]
include = ["rejected"]

[tool.hatch.build.targets.wheel]
include = ["rejected"]

[tool.hatch.version]
path = "rejected/__init__.py"

[tool.yapf]
allow_split_before_dict_value = false
indent_dictionary_value = true
